#!/bin/zsh

set -e

# @description shows usage of command
bwf_usage () {
    cat <<EOF
Bitwarden using fzf

Usage
    bwf [options] [<ACCOUNT_NAME>]

OPTIONS
    -x, --clipboard     insert into clipbaord (default)
    -h, --help          display this help message
    -p, --password      print password to stdout
    -u, --username      print username to stdout

if neither `-p` and `-u` are not defined, `-u` is set

CLIPBOARD
    Uses xclip to paste username into clipboard and
    password to primary selection.

LOGIN
    To be logged in make sure to set the environment variable
    BW_SESSION to your session key. To get the session key
    run 'bw login'

KEYBINDS
    ctrl-p      toggle preview

EOF
}

# @description Helper function to check if a given tool is installed, otherwise die
# @arg $1 string name of the binary
# @arg $2 string additional text to the error message (e.g. where to download)
need() {
   which "$1" &>/dev/null || die "Binary '$1' is missing but required\n$2"
}

# @description Edit fzf-command to change appearance
fzf_command () {
   local preview='bw get item {-1} | jq -C -r ".| {name: .name, username: .login.username, password: .login.password, notes: .notes, uri: .login.uris[].uri}" | head -n -1 | tail -n +2 | sed "s/^\s//g"'
   if [ -v "$TMUX" ]; then
      # Edit this if you use tmux and want to change the appearance
      fzf-tmux -p --preview-window hidden,wrap,60% --bind=ctrl-p:toggle-preview --preview "$preview"  "$@"
   else
      # Edit this if you don't use tmux and want to change the appearance
      fzf --height=25% --layout=reverse --preview-window hidden,wrap,60% --bind=ctrl-p:toggle-preview --preview "$preview" "$@"
   fi
}

# @description gets a single items (json)
bwf_getsingleitem () {
   if [ -z "$allItems" ]; then
      allItems=$(bw get item "$account")
   fi
}

# @description gets all items (json)
bwf_getitems () {
   if [ -z "$allItems" ]; then
      allItems=$(bw list items)
   fi
}

# @description gets the id of the selected item
# * if `ACCOUNT_NAME` is provided, then return a single item
# * if `ACCOUNT_NAME` is not provided, then ask user to select from all accounts
bwf_getitem () {
   if [ -z "$item" ]; then
      if [ ! -z "$account" ]; then
         bwf_getsingleitem
         item=$(jq -r '.id' -c <<< "${allItems}")
      else
         bwf_getitems
         item=$(jq -r '.[] | [.name, .id]' -c <<< "${allItems}" | \
               rg -ao '".*"' | sed 's/","/\t/g' | sed 's/^"\(.*\)"$/\1/' | \
               fzf_command --with-nth ..-2 | awk '{print $2}')
      fi
   fi

   if [ -z "$item" ]; then
      echo "❌ no matches"
      return 1
   fi
}

# @description grabs username for given account
bwf_getuser () {
   if [ "$#" -gt 0 ] && [ -z "$1" ]; then
      item=$*
         <<< "${allItems}"
   else
      bwf_getitem
   fi
   jq -r 'map(select(.id == "'"$item"'")) | .[] .login.username' \
       <<< "${allItems}"
}

# @description grabs password for given account
bwf_getpassword () {
   if [ "$#" -gt 0 ] && [ -z "$1" ]; then
      item=$*
   else
      bwf_getitem
   fi
   jq -r 'map(select(.id == "'"$item"'")) | .[] | .login.password' \
         <<< "${allItems}"
}

xflag=0
uflag=0
pflag=0
item=""

need bw
need xclip
need jq
need fzf

### Read arguments
parsed_options=$(getopt -n "$0" -o upxh -- "$@")
eval "set -- $parsed_options"
while [ "$#" -gt 0 ]; do
    case $1 in
        (-u|--username)
            uflag=1
            shift
        ;;
        (-p|password)
            pflag=1
            shift
        ;;
        (-x|--clipboard)
            xflag=1
            shift
        ;;
        (-h|--help) bwf_usage; return 0;;
        (--)
            shift
            break
        ;;
        (*) exit_abnormal;;
    esac
done

if [ -z "$*" ]; then
    account=""
else
    account="$*"
fi

bwf_getitem

# show username per default
if [ $uflag -gt 0 ] || ([ $uflag -eq 0 ] && [ $pflag -eq 0 ] ) ; then
   if [ $xflag -gt 0 ]; then
      bwf_getuser "$item" | xclip -selection clipboard -i | echo "✔ username copied to clipboard"
   else
      bwf_getuser "$item"
   fi
fi

if [ $pflag -gt 0 ]; then
   if [ $xflag -gt 0 ]; then
      bwf_getpassword "$item" | xclip -selection clipboard -i | echo "✔ password copied to clipboard"
   else
      bwf_getpassword "$item"
   fi
fi